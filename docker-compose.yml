version: '3.7'
services:
  account:
    environment:
      - mode
    volumes:
      - ./account:/src
    build:
      context: './account'
      args:
        - mode=${mode}
    ports:
      - "4000:3000"
    depends_on:
      - database

  device:
    environment:
      - mode
    volumes:
      - ./device:/src
    build:
      context: './device'
      args:
        - mode=${mode}
    ports:
      - "4001:3000"
    depends_on:
      - database
  drone:
    environment:
      - mode
    volumes:
      - ./drone:/src
    build:
      context: './drone'
      args:
        - mode=${mode}
    ports:
      - "4002:3000"
    depends_on:
      - database
  ledwall:
    environment:
      - mode
    volumes:
      - ./ledwall:/src
    build:
      context: './ledwall'
      args:
        - mode=${mode}
    ports:
      - "4003:3000"
    depends_on:
      - database

  restservice:
    environment:
      - mode
    volumes:
      - ./MainService:/src
    build:
      context: './MainService'
      args:
        - mode=${mode}
    ports:
      - "4004:3000"
      - "8856:8856"
    depends_on:
      - database

  search:
    environment:
      - mode
    volumes:
      - ./search:/src
    build:
      context: './search'
      args:
        - mode=${mode}
    ports:
      - "4005:3000"
    depends_on:
      - database

  nginx:
    image: nginx:latest
    ports:
      - "80:8080"
      - "443:443"
    volumes:
      - ./public:/usr/share/nginx/html
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
      #- /etc/letsencrypt/live/api.arnold-tim.de/: /etc/key/
    depends_on:
      - account
      - device
      - drone
      - ledwall
      - restservice
      - search
  database:
    image: mariadb:latest
    ports:
      - "3306:3306"
    restart: always
    env_file:
      - ../secrets.env
    volumes:
      - databaseVolume:/var/lib/mysql
  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
    depends_on:
      - database


volumes:
  databaseVolume: {}

